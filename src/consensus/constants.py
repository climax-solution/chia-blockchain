from typing import Any, Dict

constants: Dict[str, Any] = {
    "NUMBER_OF_HEADS": 3,  # The number of tips each full node keeps track of and propagates
    "DIFFICULTY_STARTING": 500,  # These are in units of 2^32
    "DIFFICULTY_FACTOR": 3,  # The next difficulty is truncated to range [prev / FACTOR, prev * FACTOR]
    "IPS_FACTOR": 3,  # The next ips is truncated to range [prev / FACTOR, prev * FACTOR]
    # These 3 constants must be changed at the same time
    "DIFFICULTY_EPOCH": 128,  # The number of blocks per epoch
    "DIFFICULTY_WARP_FACTOR": 4,  # DELAY divides EPOCH in order to warp efficiently.
    "DIFFICULTY_DELAY": 32,  # EPOCH / WARP_FACTOR
    "DISCRIMINANT_SIZE_BITS": 1024,
    "BLOCK_TIME_TARGET": 300,  # The target number of seconds per block
    # The number of seconds that that the VDF must be run for, at a minimum
    "MIN_BLOCK_TIME": 30,
    # For the first epoch, since we have no previous blocks, we can't estimate vdf iterations per second
    "VDF_IPS_STARTING": 5000,
    "MAX_FUTURE_TIME": 7200,  # The next block can have a timestamp of at most these many seconds more
    "NUMBER_OF_TIMESTAMPS": 11,  # Than the average of the last NUMBEBR_OF_TIMESTAMPS blocks
    # If an unfinished block is more than these many seconds slower than the best unfinished block,
    # don't propagate it.
    "PROPAGATION_THRESHOLD": 300,
    # If the expected time is more than these seconds, slightly delay the propagation of the unfinished
    # block, to allow better leaders to be released first. This is a slow block.
    "PROPAGATION_DELAY_THRESHOLD": 1500,
    # Hardcoded genesis block, generated using tests/block_tools.py
    # Replace this any time the above constants change.
    "GENESIS_BLOCK": b'\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x15N3\xd3\xf9H\xc2K\x96\xfe\xf2f\xa2\xbf\x87\x0e\x0f,\xd0\xd4\x0f6s\xb1".\\\xf5\x8a\xb4\x03\x84\x8e\xf9\xbb\xa1\xca\xdef3:\xe4?\x0c\xe5\xc6\x12\x80\x17\xd2\xcc\xd7\xb4m\x94\xb7V\x959\xed4\x89\x04b\x08\x07^\xca`\x8f#%\xe9\x9c\x9d\x86y\x10\x96W\x9d\xce\xc1\x15r\x97\x91U\n\x11<\xdf\xb2\xfc\xfb<\x13\x00\x00\x00\x98\x97N\xe3py\xb5*\xe8\xbe_\xa5\xa5mq\xceY\x08$;\xe1\xef;:\xc0\x93\x84\xa6(`\xe7\xf1\x0b\xb6\x08\xb4\xa1\xc7\x03\xe5v\xb9)\xd2\xc9|\t\xcc\xb3\xd4\x05\xd9-\xa2;\xeb\xdd!\xd1\\Oh<\x01+\x9e\xbfK\xe3y\xd8\xd0T\xac\xb52+Zj+)\xad\xabIg\x82\x998\xe5\x86\xa3[\xd1\xc1\xe9\x9dD\xbb\xe2IN\x01\xdc\x1e\xcc\t\x1c\xa7\xe4\xb92\x98^\xd5\xd6\xce\xe1Z\xcd\x9e\xee\xba\x9f,\x94B?}\xf7\xeb\x8f,\xbds\xc4g\x02"}\x88\x17.\xf7\xd3\x89\x15Vi\xbe2\xdct\xc4\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x00\x00\x00\x00\x02JW\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\xf6\xcb\xc9@\x18<\xf3NgW\xe1v\xc5ag]\x1e\xb65\x15\xd6X\xb7W\xa3\xe4\xb1\xea\xf4!\xaf\xa6\x9b0v,PR\xe4L\x87\xff\xc9\xe3\x13\xf2\xf0\xcb*3R\x91dE8\xf6S<=\xfd\x87u\xf7\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x86\x91#\xeb)\xc2\xae\x04Q\x041&\xa32\x02\xd4\xdbge\x9b\tj\x02\xa8\x9aH\x15?\xa5\xcc\xdd\x84\xcf\x10:\xb5Ki"\xd2\x07\xf5\xd3\xc8\xb1U_P\xcb^\xd8"\x95?\x18%\xb8\xdf\xa7\x82\xaa\xb2\xbb\x03\x00\x00\x03\xa6\x00O\x90+E\x9a#\xf2\xb1D\x88|\x8f\nx\xe4\xb6\xe7\x02\x10\x11\xb1\x13[u)\xfe*\x94\x9c\r\x91`\xfc\xa8\x0c\xb1\x00,?p\xba\xb2\x82\xf2n&\x84\x1f\xe0U\xe9\xc2\xe4\xc2Y\xc8\x9bg\xf9\xd1\x8b\x02\xdf\x0c\xff\xbf\xd4n\x11\tU\x97\x8a\xe2\x02^K&\'\x07\xe1\xf2\xa7\xf6nn\xdf\x9a\xd6uj6\xa2\xb0\xe4B\xde\xdf\xd8CMQJ%[\x83\xdd)\xef(\xce\x03\xb1DD&\x96i\x16\xc8\xbd\xe5cX\x86\x82P_\xa1\x00\x00\x00\x00\x00\x00\x0c\x90\x00\x17i6M\xe98n\xb9\r\x14O#\xc92\xc67\xd1Ta\x1f\t\x1c\xf6\x12\x97\xa8\xd5\xe8V%c\xd4\xb1\xae\xa7\x15%-U\x17mu\x058\xb4\x91J\xc7J\xca\x9b\xbf\\\x0fJ3\x18+!\x8a5"\xcbP\x00\x0c\xb7\x07L\xff\xff\x08\xe6/M\x8c\x05%X@\xa2\xed1\xe9\x08\xac\xc4Z\x93\x07\x16\xd9\xb1\xd7x\xa5\xea\x9br\x1aJ\xd5~a[\r\x03\xe2\xe7\xda\x08\xa3\x9cF\x1d\x9d\xa8\x90\xe2\xcd\x10P\x9d\x0f\x19#hR\xe1\x00\x18\x8e\xf6\xc6H\x93\x00\\\x02\xd8\xdf\xb3h\xb1\x02R\xa6\x0b\xd05\xe6\xb8\xd9\x07\x95\x81 EP\xb1\x9fb\xdb"\xac\x06\xc6\x03\xc9\x0e\x13\xc9\x93\x9f\x8f\x83\xbfy\x85\xc0\xa8$\xa1\xde\xae\x0e?\xdd\xc2\xab"\xb5I\x1a\xff\xf0\xea\x1c\xc8\xeb\xc9\x18\xb8:\x0f`s\xc2CiSIxk\xa8]\xab\xbb\xf4\xef\xf4\xaf\x81\x17\x9aenFg\xbf\xe4\xeb\xe9j\x92\xf0{\xda\xae\xd5\x16\xecX\xdf3\x9b~%Y\xde*L1\xc2\xfeO\xa8\x02\xd5\x00\x00\x00\x00\x00\x00C\x03\x00:sP\xf8\xb3\x1a%\x98K&\xde\x1dQi\x83\x97[K;CbJ\xba\x94M\xf1\xa5\x1c\xfb\xc3\xe5!\x16\xa8\x98}\x7f\xa1\xb0\x8b\xc8\x97~\x97\xc5\xb0\xe4\x13\xd8\x89\x14\x9d\x7f7_9\x1f\x93\x89\xc4\n\x02\xa8\x94\x00(\x99\xce\xbf\xe3\xd9Gu\xa8\xa8\xf1\xc7\xe4\x90\xff)O\xac,\xa9C;\xaf\x8a\x94\xa9\xcc\xcc|S\xb4\x7f*\xc2\xa2\xd9\x06\xfbA\xab\xbd\xfd\x91\x13\x18\xb4z\x16T6M\xed\xecYd)8j\n\x84\xaea\x82\xa9\x00[\xad\xb8K\xa5\x86\xd7\x0c\xa1\xc9\x06o/wF\xb7\xd9\x0c\xc2n\xfd7f8?\xbf\xc3\xa6U\xf8\xde\x81\x92\xa2y\x89\x88-\xfb\xea\x91\x9e\xf2\t\xf3\x14!R\xf70L\x9b\x84\x83W\xb5~\xd5R\xcf\x89\x7f\xeb\x84\xff\xf7\x9c\x12\xe7\xc0\xd2\xb2T=\x9c\xcb\x8a\x02z\xd7\xa8w\xc5C\r>\xe9"h\xf431\xdcAg\x16FP\xfcZ(\x1et\xb0\xe8Hx\xf079\xd0\xac\xd1F6\xa5\xc5\xaa\xa4\x05\xea\xc3RON[ \xaf7\x00\x00\x00\x00\x00\x01\xf6\x93\x00!f\xc3XQ\xaa\'\xad\xbf\xf3;\xe6DAy\xce\'\xd9ff}l`K\xcd|\x8c\x90\r\x1a>D\xecSg1\xb9\n\xab:+_Ag\x80\xa6J\xc7\xe6\xe2\xbb1EG\x01$\xdd\x8a\xeeV<\xc3\xba\x18\xff\xdf{\xe1\x8c\xc5\x7f\xe9\xd2\x07\x8f*\xbb\xf8\x90J\xf9\xda\xe3o\x14\xcer\x97"\xffe\xb1\xf1"\x10\x1d\x01\'b\xa0k\xaag)\xd4\x0c\xda\x1f_\x13\x1d;G\xc4D\xcd\x17\x08\xa0\xd5\x14\xc3V\rS9\xdd\xf8/\x00^\x83C\xa2\x88\x83\x1dg\xd7 \'U,\x95\x84vh\xe1\xfc\xcd\xc8c\x1d\xde\x91\xad\xf6o&f\xf5\xee\x17\xff\xaeM\x0c&\xda\x86\x84z`\x18\x10\xaf4Z#\x8f\x13GY\x18\xa0f\xed\xdf~\xdd\xbf\x07\xbdA\x00\x1a\xc9k\x8egp\xb8\xbd\xb5\xcf\r\x13\t=\x14~\x9a\xd3y\xe4X1\x127q\xa9-\x88:\xc0\xecH\x8f.\t\xca\xc9-\xb4ai\xe6\x9a\xa2\x19\xfc-\xb3\x10\xe1J\x10;\xda\xfa\xeb\xddB\x11\\2\xce\xff9\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00^K\x05a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa7\xb0\x1a\xba$sST\x96\xa9[\xc1\xb2\x08\xbe5\xb41\x89\x8f\x19<\x18\x1db\x01!wG\x82\xc2\xb8\x0cN\x8b\x9f\xf7\x1fs\x80\x91\x15\x9f\xce\xfcv\xdf\x173&q\x8c)\x9b\x16u\x15\xb2x\xf4\xd9r~\xf0\x00\x00\x00\x00\x00\x00\x01\xf4\x00\x00\x00\x00\x00\x02JW\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xd9\xef\x0b\x83h`1\x94\x92\x915$\xf7Hh\xaeV\xa1\x91\xff\x89\xd33\xdd\x96\xb1\xa6\x01\xa4w\xc1T\x8f\xdb\xd6u\x1a\xd3s\xc1\xb2\xe1\x80\x9d\xa8\xc2X\x98\x10\xb7L\xc8\x8c\xf7M\\\xb2n\x9di\tmV\xf5\x9f\x00wE%\xa8GG\x03\x91\xac6p\xec\x8e\xef\x7f\x8f\xa7\x8a\xc6W-0\x90R\tH\xc7\xd1C8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x8b)\xaa\x96x8\xd76J\xa6\x8b[\x98\t\xe0\\\xe3^7qD\x8c\xf5q\x08\xf2\xa2\xc9\xb03mv\x00\x00\x0c\xbb\xa1\x06\xe0\x00N\x1f\xe8;}6F\xd7\xec\xc7\x83\x16T\x96\x1f\xe6\x88,\xa4\x9b\xa3Lo\xd0\xe6\x89jW\xac\xba\xae)\xe9\x91?\x97\x0fU\xf5\xd8\xdc\x9e\xce\xbf~\xad\xc2\xbc\x17v|\x947N\x0e\xfa\xff\xe6;\xce@|\xe9{\xe2:\xa8H\xb4\xb9\xde;<;-\x9a\x03\xbf\xa3\xff\xed\x81\x0cd\x80|(I\x9e\x8c\xa5\x83\xdf\x8a\x1aX\xc1#\x19uE`)\xeblV\x1d\x8f\xe6\x1f\xfa\x03\xe2\xf4b\xdfO\x9c\x11\x1fHJ2\xbfvC\x8b^\x8b)\xaa\x96x8\xd76J\xa6\x8b[\x98\t\xe0\\\xe3^7qD\x8c\xf5q\x08\xf2\xa2\xc9\xb03mv\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00',  # noqa: E501
    # Target tx count per sec
    "TX_PER_SEC": 20,
    # Size of mempool = 10x the size of block
    "MEMPOOL_BLOCK_BUFFER": 10,
    # Coinbase rewards are not spendable for 200 blocks
    "COINBASE_FREEZE_PERIOD": 200,
    # Max coin amount int(1 << 48)
    "MAX_COIN_AMOUNT": 281474976710656,
}
