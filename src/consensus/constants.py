from typing import Any, Dict

constants: Dict[str, Any] = {
    "NUMBER_OF_HEADS": 3,  # The number of tips each full node keeps track of and propagates
    "DIFFICULTY_STARTING": 500,  # These are in units of 2^32
    "DIFFICULTY_FACTOR": 3,  # The next difficulty is truncated to range [prev / FACTOR, prev * FACTOR]
    "IPS_FACTOR": 3,  # The next ips is truncated to range [prev / FACTOR, prev * FACTOR]
    # These 3 constants must be changed at the same time
    "DIFFICULTY_EPOCH": 128,  # The number of blocks per epoch
    "DIFFICULTY_WARP_FACTOR": 4,  # DELAY divides EPOCH in order to warp efficiently.
    "DIFFICULTY_DELAY": 32,  # EPOCH / WARP_FACTOR
    "DISCRIMINANT_SIZE_BITS": 1024,
    "BLOCK_TIME_TARGET": 300,  # The target number of seconds per block
    # The number of seconds that that the VDF must be run for, at a minimum
    "MIN_BLOCK_TIME": 30,
    # For the first epoch, since we have no previous blocks, we can't estimate vdf iterations per second
    "VDF_IPS_STARTING": 5000,
    "MAX_FUTURE_TIME": 7200,  # The next block can have a timestamp of at most these many seconds more
    "NUMBER_OF_TIMESTAMPS": 11,  # Than the average of the last NUMBEBR_OF_TIMESTAMPS blocks
    # If an unfinished block is more than these many seconds slower than the best unfinished block,
    # don't propagate it.
    "PROPAGATION_THRESHOLD": 300,
    # If the expected time is more than these seconds, slightly delay the propagation of the unfinished
    # block, to allow better leaders to be released first. This is a slow block.
    "PROPAGATION_DELAY_THRESHOLD": 1500,
    # Hardcoded genesis block, generated using tests/block_tools.py
    # Replace this any time the above constants change.
    "GENESIS_BLOCK": b'\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x15N3\xd3\xf9H\xc2K\x96\xfe\xf2f\xa2\xbf\x87\x0e\x0f,\xd0\xd4\x0f6s\xb1".\\\xf5\x8a\xb4\x03\x84\x8e\xf9\xbb\xa1\xca\xdef3:\xe4?\x0c\xe5\xc6\x12\x80\x17\xd2\xcc\xd7\xb4m\x94\xb7V\x959\xed4\x89\x04b\x08\x07^\xca`\x8f#%\xe9\x9c\x9d\x86y\x10\x96W\x9d\xce\xc1\x15r\x97\x91U\n\x11<\xdf\xb2\xfc\xfb<\x13\x00\x00\x00\x98\x97N\xe3py\xb5*\xe8\xbe_\xa5\xa5mq\xceY\x08$;\xe1\xef;:\xc0\x93\x84\xa6(`\xe7\xf1\x0b\xb6\x08\xb4\xa1\xc7\x03\xe5v\xb9)\xd2\xc9|\t\xcc\xb3\xd4\x05\xd9-\xa2;\xeb\xdd!\xd1\\Oh<\x01+\x9e\xbfK\xe3y\xd8\xd0T\xac\xb52+Zj+)\xad\xabIg\x82\x998\xe5\x86\xa3[\xd1\xc1\xe9\x9dD\xbb\xe2IN\x01\xdc\x1e\xcc\t\x1c\xa7\xe4\xb92\x98^\xd5\xd6\xce\xe1Z\xcd\x9e\xee\xba\x9f,\x94B?}\xf7\xeb\x8f,\xbds\xc4g\x02"}\x88\x17.\xf7\xd3\x89\x15Vi\xbe2\xdct\xc4\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x00\x00\x00\x00\x02JX\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00#5\xf9\xb9\xb10\xb1\xefz\xb63\x89\x96\xe53<t\xe0Bb6!\xf4\'\xc5 \x8b+\xb6\x8fH_q\x1c\x0f\xcf\x0f\xfd\xaf\x1b>N\x8d\xab\x17\xca\x9c\x12\xe6\x8e\xf70\xf2\xcc]r\xaa\xca\xb0\xb1g7\xd4*\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xee\ra\xc7\xd0p\xec#\x03U\x88\xaf\x1eVs%t\x87\x8f78r\xed\t\x83\xf4Q#<EM\xd8f\x11\x98\x01\x88P\xce\xc6"\x17Q\x9d\xc9+\x88z\xde\xfd\xa1\xdcw\x02\xbc\x90\x1d\x7f,C\xc2\xb9\xcaE\x03\x00\x00\x03\xa6\x00+a\x1b\xacL\xa7\x7f\xd6\xa6G\xc1\xec\x91Qq\xd1\xdb\xb0/\x17\x0f\x14r\xf5*\'\x91\xf4j\xfd\xa2\xdb\x8c\x95\xae\x1a\xed\xec\x02\xa6/\xd2\x9a\xb8\xc4\x8b\x9f\xc0\xd2\x04\x9d\xb0\x8b\x15:$vw\x98k\x82q\x10\xc0\xff\xd9\xba\xbc.}\xd9gk\xfel>\xe97N\x13\xd8\xcc\x81\x94p\xfd\xa7X\x8a#-\x11\x15Q\xd8\xc8\xb1\xfd\x9d\x8d\xac\x93\xf6^\x19%N\xf1 \xcakz7\x18k\xe8Z\x874\x90\xea\xeaR\xa3\x8aK@\x08?\x00\x00\x00\x00\x00\x00\x0c\x90\x00D]\x99`@\x0e4P\xe1\x11\x01-\xce\xda2\x8ei\xcd\x85\xaf\xc7&\xe2\xa4\x86\xdc\x9b\xe8\x18\xd7\xe3\x19\xea\xb1\x8bI\xc0lb)@3\'\xd0\x04\x1d\xc4\xb8\xd3f\xa4!\x96\xb6\xday\x97w$\\\xed|\xd6\xb8\xff\xf9\x0eQ6K\xffa\x83\xc8\x83|\x1f\xd5#\x8e"\x89\xb3\xb0\x1e?\xc5W\x85\xa2r\x83\x03R\x0b\xeas\xb6\xae\x81\xf8\xb6l\x97\x1b\xa5\x92\xb6\xe9\xed\xbf%\x92\xee(\xce\xab\xdc\x01\xf1\xa8\xf8\xa9\xd4\xb6\xf4\xff#Q\x00[\x1cu!\xdc0\xeb\xf0e\x8b\xfd\xfd\xd4\xc7[\x8f\xd6K\x90\xcd\xa5\xd8\xdcp\xaf\xd0\x8f\xc1\xa6\x85\x8bO\xbb\x0c\xc9\xc7U^\xb3O\xafH\xff,\x11B\x810\x04UO\x89{\x93\xbdFA\xf2-sB_\xd9@\x00:\xa6N\xc2>]\x9aZE\x1cSKF\xeb\x12\x0c\xbcv\x98\x9e\xa0\xacx\r\xf7i\x10a\\\xaa\x06\x8a&\xdft\x17\x8a \x9c\xa8\x04p\xa5\xd0\xed\xca\xf7h\'/"\x1a\xbd\x87\xf3!xM\xf8~M\xd3\xdc\xc1\x00\x00\x00\x00\x00\x00C\x03\x00\x1ek\x92t\x93\xfah\xb5\x03]\xf76\x04=\x83hoEJ\x0eU1\x91u!\xf0\xa9\xa4\x9bR"%-\x02\x1fX\x9b\xa6=,\x82\x980\xde\xfee~\x13\xdd\xb7c\xf7\xe2\xe2\x10\x8eL^\x017\xaa\x88\nh\xff\xe3y\x1e\xd65\xe7\x86\x18cC\xa5&\xbf\x8c\x05\x8d\x9b\x82\x9a~\x86\xf8\x88/\x1c\x9cmb\x9bu\xcb\x8e\x95\xbb\xaf-\xa6\xd9\xc7|{).q\x87#5f\x19\xdd\xe7\x1eBB\xc3#\x0b8\xf9\x1f\x8d\xc4d\xf1\x00YK\x8b\xc8@\xcdu\x99\x9e\xc9\xfb9G\x16\x8b\x96\xb3"\xe3\xf4\x90\x81f\x1do\x97\xe16\xe9\xb4u9=\x9c\x9fy\x1b{\x91\xfbm\x0fHpt<^\x99\xcc\x82a\xf0\x87Vx\x08\xd49\xb1\xaev\x8fHE\xff\xf5\\\x97\xa80@\x15\x8b\x80\x15\xd4m6:\x19\xdb\xcfn]e\x94+p\xbcl\xbd\xa80\xbd\xefq\x10\xa4\xfe\x0f\x88\xcd\xa1\xa8\xbb\xb0\x8br\xb1B\xfe\x95\x16\xb7\xcb\xbb\xb6\x8a\xe8[\x08\xfa!x\xb3\xe1\xc41\xb7\x00\x00\x00\x00\x00\x01\xf6\x94\x00&3\xff\x00\xc9\x12\x152d\xb3\xae\x1a?Ch}\xf9\x00[\x84\xb0\xb7\xbc\x14D\xa0\xa8x\x9d"Rk(!\x80\xea\x89\xe5\xd6s\x9ff\x9f~\x19\x90&4\xe7Kf\xc1\x10HQ\x1bK\x00\xff\xd74lwp\xff\xea\x1a\xcf\xa8P%Q\x87\x83\xd2\xb8\x07\xd89\xb7\xef\x8b=\xe3\xae\xd0m\xf3\xcf\xe7\xe6\x02\xa9\x84\x9e\xa8\xc0\x0b\xef\xcc\xf0\xfe~V\xaa\x08\xdcT\xc69!RR\xe5\x94Fz+\x80\xe8Y.\xbb\x06$Up\xc5\x81\x00b\xa6j\xb6\xaa\xe70\x12\xfejN\xf3\xb7\xa6xd@\xf6\x81J(].y\x94\xcao\x98\x8a\x07\x99\xa0Q\x1f\xc0\x9c\x8c9l\xc5\x1fe\xd6\x9c\rs\xdf"d\xff\x1d\x0fWp\xe5\xe3\xfb\xb5\xfa\xbc\x90\x87\xa1J\xff\xde\x82\xb2\xb3\xbb1F\n\xb8(0\xca\x12\x96\xfd2N=\xa0\x1f\xea\x1a\xc9\x19\xadQ\xa4\t\x18\xf4\x01d\xe1W\xd8\xa7\xad\x9f\x99h\xf9\xb6l\x0ePd\xd85Y\x95K}\xc5\x99H\xe8\x08B\x9b<\x92\xf8q\xd5\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00^=\xccK\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa7\xb0\x1a\xba$sST\x96\xa9[\xc1\xb2\x08\xbe5\xb41\x89\x8f\x19<\x18\x1db\x01!wG\x82\xc2\xb8\x0b\xe7\xdb=+\xd5\xeb+\xf3g\xd41\xe6\x8d\xcf\x96$\x14A\xfe<c\xd7\xa9\xd0+D\xd4 *\xda\x92\x00\x00\x00\x00\x00\x00\x01\xf4\x00\x00\x00\x00\x00\x02JX\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xca0Q\xd9\x1a\xdd\xcb\xf5\xc48~b\x9f\xad\xf6z\xa6uQ\xa4>\x0b\'\xce/\x8f\xfe\xa6\x94\xe1p\xda\x17\xe0\x16s\xc9\xf8Puv\xfc6\x1e.\xc0D\x86\x0f\x97\xfaZ\x81\xdef\x95\xef\xadbBjI\xcf\x90\xadF\x1bt\x116\x1b\x813\x82\x0e\x95\xbd\xb8\x101\xf9\x02\x98\x1f\xd5UZ\xadb\xe1\x85\x85\x1f\x02\xedd\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x8b)\xaa\x96x8\xd76J\xa6\x8b[\x98\t\xe0\\\xe3^7qD\x8c\xf5q\x08\xf2\xa2\xc9\xb03mv\x00\x00\x0c\xbb\xa1\x06\xe0\x00\xcb\x8a\xf6\xa9B*\xdc\xd9p2\x82GH\xf5i\xf5I\xfb\xc1\xcbs)\x07\xf6\xdfJ\xb6\x1f\xb6\x8e\x97]\xd6\x95\\i\xf8]\xe8\x16\x1ak\x8f\x04\xfd\xa1\x0c\x92\x14Q)\xc9\xb5\x12<\xa3A\xe8Mg\xea4\xf1Y\xf3\x0b_t\x18\xf6\x8bDGL\xb9\xf6\xe4s\x86Y\x94\xbf\xbb\xfb3\xf4\x06]\x1d\xc4\xbf+7hv\x19\xcc\x16/\xb7O\xb8\xb6\x91\x10\xaa\x9b\x01\xb5\xf3\xaa{\xd13e\xa9\x88\xb1\xe0\x13\x11br\xa4\xbau\xaf\xd0\x8b)\xaa\x96x8\xd76J\xa6\x8b[\x98\t\xe0\\\xe3^7qD\x8c\xf5q\x08\xf2\xa2\xc9\xb03mv\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00',  # noqa: E501
    # Target tx count per sec
    "TX_PER_SEC": 20,
    # Size of mempool = 10x the size of block
    "MEMPOOL_BLOCK_BUFFER": 10,
    # Coinbase rewards are not spendable for 200 blocks
    "COINBASE_FREEZE_PERIOD": 200,
    # Max coin amount int(1 << 48)
    "MAX_COIN_AMOUNT": 281474976710656,
}
